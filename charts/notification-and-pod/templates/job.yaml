apiVersion: batch/v1 
kind: Job
metadata:
  generateName: presync-
  namespace: argocd
  annotations:
    argocd.argoproj.io/hook: PreSync 
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  completions: 1 
  parallelism: 1 
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      serviceAccount: argocd-server
      containers:
        - name: kubectl
          image: gcr.io/cloud-builders/kubectl
          command: ["/bin/bash", "-c"]
          args:
            - |
              MESSAGE=$(echo -n "Application: *{{ .Values.deployNotify.applicationName }}*") && \
              MESSAGE=$(echo -n "${MESSAGE}, TargetRevision: *") && \
              TARGET_REVISION=$(kubectl get applications.argoproj.io {{ .Values.deployNotify.applicationName }} -n argocd \
              -o jsonpath='{.spec.source.targetRevision}') && \
              MESSAGE=$(echo -n "${MESSAGE}${TARGET_REVISION}") && \
              MESSAGE=$(echo -n "${MESSAGE}*") && \
              if [ "{{ .Values.deployNotifiy.targetRevision }}" = "$(echo -n ${TARGET_REVISION})" ]; then 
                curl -X POST --data-urlencode \
                "payload={\
                  \"channel\": \"${SLACK_CHANNEL}\", \
                  \"username\": \"${SLACK_USERNAME}\", \
                  \"attachments\": [{ \
                    \"color\": \"${SLACK_COLOR}\", \
                    \"fields\": [ \
                      { \
                         \"title\": \"${SLACK_TITLE}\", \
                         \"value\": \"${MESSAGE}\" \
                      } \
                    ] \
                  }] \
                }" \
                ${SLACK_WEBHOOK}
              else 
                echo "Ignore targetRevision: ${TARGET_REVISION}"
              fi

          env:
            - name: SLACK_WEBHOOK
              value: "https://hooks.slack.com/services/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"
            - name: SLACK_CHANNEL
              value: "#general"
            - name: SLACK_USERNAME
              value: "argocd-notify-job"
            - name: SLACK_TITLE
              value: PreSync
            - name: SLACK_COLOR
              value: "#439FE0"
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: argocd
  generateName: postsync-
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  completions: 1 
  parallelism: 1 
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      serviceAccount: argocd-server
      containers:
        - name: kubectl
          image: gcr.io/cloud-builders/kubectl
          command: ["/bin/bash", "-c"]
          args:
            - |
              MESSAGE=$(echo -n "Application: *{{ .Values.deployNotify.applicationName }}*") && \
              MESSAGE=$(echo -n "${MESSAGE}, TargetRevision: *") && \
              TARGET_REVISION=$(kubectl get applications.argoproj.io {{ .Values.deployNotify.applicationName }} -n argocd \
              -o jsonpath='{.spec.source.targetRevision}') && \
              MESSAGE=$(echo -n "${MESSAGE}${TARGET_REVISION}") && \
              MESSAGE=$(echo -n "${MESSAGE}*") && \
              if [ "{{ .Values.deployNotifiy.targetRevision }}" = "$(echo -n ${TARGET_REVISION})" ]; then 
                curl -X POST --data-urlencode \
                "payload={\
                  \"channel\": \"${SLACK_CHANNEL}\", \
                  \"username\": \"${SLACK_USERNAME}\", \
                  \"attachments\": [{ \
                    \"color\": \"${SLACK_COLOR}\", \
                    \"fields\": [ \
                      { \
                         \"title\": \"${SLACK_TITLE}\", \
                         \"value\": \"${MESSAGE}\" \
                      } \
                    ] \
                  }] \
                }" \
                ${SLACK_WEBHOOK}
              else 
                echo "Ignore targetRevision: ${TARGET_REVISION}"
              fi

          env:
            - name: SLACK_WEBHOOK
              value: "https://hooks.slack.com/services/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"
            - name: SLACK_CHANNEL
              value: "#general"
            - name: SLACK_USERNAME
              value: "argocd-notify-job"
            - name: SLACK_TITLE
              value: PostSync
            - name: SLACK_COLOR
              value: good

---
apiVersion: batch/v1 
kind: Job
metadata:
  generateName: syncfail-
  namespace: argocd
  annotations:
    argocd.argoproj.io/hook: SyncFail
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  completions: 1 
  parallelism: 1 
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      serviceAccount: argocd-server
      containers:
        - name: kubectl
          image: gcr.io/cloud-builders/kubectl
          command: ["/bin/bash", "-c"]
          args:
            - |
              MESSAGE=$(echo -n "Application: *{{ .Values.deployNotify.applicationName }}*") && \
              MESSAGE=$(echo -n "${MESSAGE}, TargetRevision: *") && \
              TARGET_REVISION=$(kubectl get applications.argoproj.io {{ .Values.deployNotify.applicationName }} -n argocd \
              -o jsonpath='{.spec.source.targetRevision}') && \
              MESSAGE=$(echo -n "${MESSAGE}${TARGET_REVISION}") && \
              MESSAGE=$(echo -n "${MESSAGE}*") && \
              if [ "{{ .Values.deployNotifiy.targetRevision }}" = "$(echo -n ${TARGET_REVISION})" ]; then 
                curl -X POST --data-urlencode \
                "payload={\
                  \"channel\": \"${SLACK_CHANNEL}\", \
                  \"username\": \"${SLACK_USERNAME}\", \
                  \"attachments\": [{ \
                    \"color\": \"${SLACK_COLOR}\", \
                    \"fields\": [ \
                      { \
                         \"title\": \"${SLACK_TITLE}\", \
                         \"value\": \"${MESSAGE}\" \
                      } \
                    ] \
                  }] \
                }" \
                ${SLACK_WEBHOOK}
              else 
                echo "Ignore targetRevision: ${TARGET_REVISION}"
              fi

          env:
            - name: SLACK_WEBHOOK
              value: "https://hooks.slack.com/services/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"
            - name: SLACK_CHANNEL
              value: "#general"
            - name: SLACK_USERNAME
              value: "argocd-notify-job"
            - name: SLACK_TITLE
              value: SyncFail
            - name: SLACK_COLOR
              value: danger
